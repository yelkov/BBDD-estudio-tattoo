/***Procedimientos para verificar citas de tipo tatuaje y citas de tipo piercing****/
DELIMITER $$

DROP PROCEDURE IF EXISTS VALIDAR_CITA_TATUAJE$$
CREATE PROCEDURE VALIDAR_CITA_TATUAJE(IN ID_TATUADOR INT UNSIGNED, IN ID_ANILLADOR INT UNSIGNED)
BEGIN
	IF ID_TATUADOR IS NULL 
		THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'ERROR: LA CITA DE TATUAJE DEBE TENER ASIGNADO UN TATUADOR.';
	END IF;
    
    IF ID_TATUADOR NOT IN (
							SELECT TRABAJADOR
								FROM TATUADORES
                          )
		THEN SIGNAL SQLSTATE '45001' SET MESSAGE_TEXT = 'ERROR: LA CITA DE TATUAJE DEBE TENER ASIGNADO UN TATUADOR VÁLIDO.';
	END IF;
    
    IF ID_ANILLADOR IS NOT NULL
			THEN SIGNAL SQLSTATE '45002' SET MESSAGE_TEXT = 'ERROR: LA CITA DE TATUAJE NO DEBE TENER ASIGNADO ANILLADOR.';
	END IF;
END$$

DROP PROCEDURE IF EXISTS VALIDAR_CITA_PIERCING$$
CREATE PROCEDURE VALIDAR_CITA_PIERCING(IN ID_ANILLADOR INT UNSIGNED, IN ID_TATUADOR INT UNSIGNED)
BEGIN
	IF ID_ANILLADOR IS NULL
		THEN SIGNAL SQLSTATE '45003' SET MESSAGE_TEXT = 'ERROR: LA CITA DE PIERCING DEBE TENER ASIGNADO UN ANILLADOR.';
	END IF;
    
    IF ID_ANILLADOR NOT IN (
								SELECT	TRABAJADOR
									FROM ANILLADORES
							)
			THEN SIGNAL SQLSTATE '45004' SET MESSAGE_TEXT = 'ERROR: LA CITA DE PIERCING DEBE TENER ASIGNADO UN ANILLADOR VÁLIDO.';
	END IF;
    
    IF ID_TATUADOR IS NOT NULL
			THEN SIGNAL SQLSTATE '45005' SET MESSAGE_TEXT = 'ERROR: LA CITA DE PIERCING NO DEBE TENER ASIGNADO TATUADOR.';
	END IF;

END$$