/*DISPARADORES QUE VERIFICAN QUE UNA CITA DE TIPO TATUAJE SEA REALIZADA POR UN TATUADOR
O UNA CITA DE PIERCING SEA REALIZADA POR UN ANILLADOR*/

DELIMITER $$
USE ESTUDIO_TATTOO$$

DROP TRIGGER IF EXISTS VIGILAR_TRABAJADOR_CITA_I$$
CREATE TRIGGER VIGILAR_TRABAJADOR_CITA_I
BEFORE INSERT ON CITAS
FOR EACH ROW
BEGIN
	IF NEW.TIPO = 'TATUAJE'
		THEN IF NEW.TATUADOR IS NULL
			THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'ERROR: LA CITA DE TATUAJE DEBE TENER ASIGNADO UN TATUADOR.';
		END IF;
		IF NEW.TATUADOR NOT IN (
										SELECT	TRABAJADOR
											FROM TATUADORES
                                    )
			THEN SIGNAL SQLSTATE '45001' SET MESSAGE_TEXT = 'ERROR: LA CITA DE TATUAJE DEBE TENER ASIGNADO UN TATUADOR VÁLIDO.';
		END IF;
        IF NEW.ANILLADOR IS NOT NULL
			THEN SIGNAL SQLSTATE '45002' SET MESSAGE_TEXT = 'ERROR: LA CITA DE TATUAJE NO DEBE TENER ASIGNADO ANILLADOR.';
		END IF;
	END IF;
	IF NEW.TIPO = 'PIERCING'
		THEN IF NEW.ANILLADOR IS NULL
			THEN SIGNAL SQLSTATE '45003' SET MESSAGE_TEXT = 'ERROR: LA CITA DE PIERCING DEBE TENER ASIGNADO UN ANILLADOR.';
		END IF;
        IF NEW.ANILLADOR NOT IN (
										SELECT	TRABAJADOR
											FROM ANILLADORES
                                    )
			THEN SIGNAL SQLSTATE '45004' SET MESSAGE_TEXT = 'ERROR: LA CITA DE PIERCING DEBE TENER ASIGNADO UN ANILLADOR VÁLIDO.';
		END IF;
        IF NEW.TATUADOR IS NOT NULL
			THEN SIGNAL SQLSTATE '45005' SET MESSAGE_TEXT = 'ERROR: LA CITA DE PIERCING NO DEBE TENER ASIGNADO TATUADOR.';
		END IF;
	END IF;
END$$

DROP TRIGGER IF EXISTS VIGILAR_TRABAJADOR_CITA_U$$
CREATE TRIGGER VIGILAR_TRABAJADOR_CITA_U
BEFORE UPDATE ON CITAS
FOR EACH ROW
BEGIN
	IF NEW.TIPO <> OLD.TIPO
		THEN SIGNAL SQLSTATE '45006' SET MESSAGE_TEXT = 'ERROR: NO ES POSIBLE CAMBIAR EL TIPO DE CITA';
	END IF;
	IF NEW.TIPO = 'TATUAJE'
		THEN IF NEW.TATUADOR IS NULL
			THEN SIGNAL SQLSTATE '45007' SET MESSAGE_TEXT = 'ERROR: LA CITA DE TATUAJE DEBE TENER ASIGNADO UN TATUADOR.';
		END IF;
		IF NEW.TATUADOR NOT IN (
										SELECT	TRABAJADOR
											FROM TATUADORES
                                    )
			THEN SIGNAL SQLSTATE '45008' SET MESSAGE_TEXT = 'ERROR: LA CITA DE TATUAJE DEBE TENER ASIGNADO UN TATUADOR VÁLIDO.';
		END IF;
		IF NEW.ANILLADOR IS NOT NULL
				THEN SIGNAL SQLSTATE '45009' SET MESSAGE_TEXT = 'ERROR: LA CITA DE TATUAJE NO DEBE TENER ASIGNADO ANILLADOR.';
		END IF;
	END IF;
	IF NEW.TIPO = 'PIERCING'
		THEN IF NEW.ANILLADOR IS NULL
			THEN SIGNAL SQLSTATE '45010' SET MESSAGE_TEXT = 'ERROR: LA CITA DE PIERCING DEBE TENER ASIGNADO UN ANILLADOR.';
		END IF;
        IF NEW.ANILLADOR NOT IN (
										SELECT	TRABAJADOR
											FROM ANILLADORES
                                    )
			THEN SIGNAL SQLSTATE '45011' SET MESSAGE_TEXT = 'ERROR: LA CITA DE PIERCING DEBE TENER ASIGNADO UN ANILLADOR VÁLIDO.';
		END IF;
        IF NEW.TATUADOR IS NOT NULL
			THEN SIGNAL SQLSTATE '45012' SET MESSAGE_TEXT = 'ERROR: LA CITA DE PIERCING NO DEBE TENER ASIGNADO TATUADOR.';
		END IF;
	END IF;

END$$